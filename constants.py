SYMMETRY_BREAKING = 0
NO_SYMMETRY_BREAKING = 1
SYM_DICT = { NO_SYMMETRY_BREAKING: "", SYMMETRY_BREAKING: "_symbreak"}
NO_MAX_N_PACKS = 0
MAX_N_PACKS = 1
DICT_N_PACKS = {NO_MAX_N_PACKS : "max_n_packs = (n - m + 1)"}
                #MAX_N_PACKS : "max_n_packs = n/m + n - m*(n/m)"}
#SYM_DICT = { SYMMETRY_BREAKING: "_symbreak"}
SYM_DICT = {NO_SYMMETRY_BREAKING: "",}

# CP
CHUFFED = 0
GECODE = 1
HIGHS = 2
LCG = 3
#SOLVERS_CP = {CHUFFED:'chuffed',GECODE:'gecode',HIGHS: "highs",GUROBI: "lcg"}
#SOLVERS_CP = {CHUFFED:'chuffed', LCG: "lcg"}
SOLVERS_CP = { GECODE:'gecode'}

# SAT
LINEAR_SEARCH = 0
BINARY_SEARCH = 1
STRATEGIES_DICT = {LINEAR_SEARCH: "linear", BINARY_SEARCH: "binary"}
# STRATEGIES_DICT = {LINEAR_SEARCH: "linear"}
#STRATEGIES_DICT = {BINARY_SEARCH: "binary"}
#STRATEGIES_MIP_DICT = {HIGH: "HIGH",CBC:"CBC",GLPK: "GLPK"}

# SMT

CVC4 = 0
CVC5 = 1
#Z3 = 2
SOLVERS_SMTlib = {CVC4 :"cvc4"}

# MIP
CBC = 0
GLPK = 1
HIGH = 2
#STRATEGIES_MIP_DICT = {CBC:"CBC",GLPK: "GLPK"}
STRATEGIES_MIP_DICT = {CBC:"CBC",GLPK:"GLPK",HIGH:"HIGH"}
GLPK = 1
HIGH = 2
#STRATEGIES_MIP_DICT = {CBC:"CBC",GLPK: "GLPK"}
STRATEGIES_MIP_DICT = {CBC:"CBC",GLPK:"GLPK",HIGH:"HIGH"}
